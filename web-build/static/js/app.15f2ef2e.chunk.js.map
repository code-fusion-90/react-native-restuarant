{"version":3,"sources":["web-build/register-service-worker.js","node_modules/moment/src/lib/locale sync","App/component/images/logo.png","App/shared/baseUrl.tsx","App/redux/ActionCreators.js","App/redux/ActionTypes.js","App/component/DishdetailComponent.tsx","App/component/HomeComponent.tsx","App/component/MenuComponent.tsx","App/component/AboutComponent.tsx","App/component/ContactComponent.tsx","App/component/ReservationComponent.tsx","App/component/FavoriteComponent.tsx","App/component/LoginComponent.tsx","App/component/MainComponent.tsx","App/redux/dishes.js","App/redux/comments.js","App/redux/leaders.js","App/redux/promotions.js","App/redux/favorites.js","App/redux/configureStore.js","App/component/LoadingComponent.tsx","App.tsx","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","baseUrl","addComment","newComment","type","payload","addFavorite","dishId","addComments","comments","commentsFailed","err","dishesLoading","addDishes","dishes","dishesFailed","promosLoading","addPromos","promos","promosFailed","leadersLoading","addLeaders","leaders","leadersFailed","RenderComments","animation","duration","delay","title","FlatList","data","renderItem","props","View","key","index","style","margin","Text","fontSize","item","comment","readonly","imageSize","startingValue","rating","author","date","keyExtractor","toString","RenderDish","view","panResponder","PanResponder","create","onStartShouldSetPanResponder","gestureState","onPanResponderGrant","rubberBand","endState","log","finished","onPanResponderEnd","moveX","moveY","dx","dy","recognizeDrag","Alert","alert","dish","name","text","onPress","favorite","favPress","cancelable","recognizeComment","toggleModal","ref","panHandlers","featuredTitle","image","uri","description","raised","reverse","color","commPress","shareDish","message","url","Share","share","dialogTitle","DishDetail","markFavorite","postFavorite","toggleFeedbackModal","setState","showModal","state","handleComment","JSON","stringify","postComment","inputname","this","route","params","ScrollView","keyboardShouldPersistTaps","favorites","some","el","filter","Modal","animationType","transparent","visible","onDismiss","onRequestClose","styles","modal","showRating","fractions","onFinishRating","value","placeholder","leftIcon","onChangeText","Button","Component","StyleSheet","justifyContent","modalTitle","fontWeight","backgroundColor","textAlign","marginBottom","connect","dispatch","setTimeout","RenderItem","featuredSubtitle","designation","Home","animatedValue","Animated","Value","animate","setValue","timing","toValue","easing","Easing","linear","start","xpos1","interpolate","inputRange","outputRange","xpos2","xpos3","flex","flexDirection","width","transform","translateX","featured","isLoading","errMess","erreMess","promotions","promo","leader","Menu","navigation","caption","navigate","imageSrc","History","marginTop","alignItems","Leaders","titleStyle","subtitle","leftAvatar","source","bottomDivider","AboutUs","ContactUs","MailComposer","recipients","subject","body","buttonStyle","icon","sendMail","Reservation","handleReservation","guests","smoking","resetForm","presentLocalNotification","Permissions","permission","status","obtainNotificationPermission","Notifications","presentLocalNotificationAsync","ios","sound","android","formRow","formLabel","Picker","formItem","selectedValue","onValueChange","Item","label","Switch","onTintColor","marginRight","format","mode","minDate","confirmBtnText","cancelBtnText","onDateChange","accessibilityLabel","modalText","Favorites","rightButton","deleteFavorite","right","autoClose","Login","username","password","remember","SecureStore","userdata","userinfo","parse","container","containerStyle","formInput","center","checked","formCheckbox","formButton","handleLogin","StackScreenOptions","headerStyle","headerTintColor","headerTitleStyle","Stack","createStackNavigator","Drawer","createDrawerNavigator","CustomDrawerContentComponent","forceInset","top","horizontal","drawerHeader","Image","require","drawerImage","drawerHeaderText","DrawerItemList","MenuStack","Navigator","initialRouteName","screenOptions","Screen","component","options","headerLeft","size","toggleDrawer","HomeStack","AboutUsStack","ContactUsStack","ReserveTable","FavoriteDishStack","LoginStack","Main","fetchDishes","fetchLeaders","fetchComments","fetchPromos","NavigationContainer","drawerContent","drawerStyle","drawerLabel","drawerIcon","tintColor","React","height","fetch","response","ok","statusText","json","maessage","action","length","Date","toISOString","concat","laeders","config","storage","debug","Loading","store","createStore","persistCombineReducers","applyMiddleware","thunk","logger","persistor","persistStore","ConfigureStore","registerRootComponent","loading"],"mappings":"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","file":"static/js/app.15f2ef2e.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 534;","module.exports = __webpack_public_path__ + \"static/media/logo.eb267f35.png\";","export const baseUrl: string = 'http://192.168.0.102:3001/';","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl';\n\n\n//ADD NEW COMMENT\nexport const postComment = (dishId, author, comment, rating) => (dispatch) => {\n    console.log('post comment called');\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    return setTimeout(() => {\n        dispatch(addComment(newComment));\n    }, 2000)\n}\n\nconst addComment = (newComment) => ({\ntype: ActionTypes.ADD_COMMENT,\npayload: newComment\n})\n\n\n//ADD FAVORITE\nexport const postFavorite = (dishId) => (dispatch) => {\n        return setTimeout(() => {\n            dispatch(addFavorite(dishId));\n        }, 2000)\n}\n\nconst addFavorite = (dishId) => ({\n    type: ActionTypes.ADD_FAVORITE,\n    payload: dishId\n})\n\nexport const deleteFavorite = (dishId) => ({\n    type: ActionTypes.DELETE_FAVORITE,\n    payload: dishId\n});  \n\n\n//COMMENTS\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if(response.ok)\n                return response;\n            else{\n                let err = new Error('Error '+response.status + ': ' + response.statusText);\n                err.response = response;\n                throw err;\n            }\n        }, error => {\n            let err = new Error(error.message);\n            throw err;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.maessage)))\n}\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const commentsFailed = (err) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: err\n});\n\n//DISHES\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading());\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok)\n                return response;\n            else{\n                let err = new Error('Error '+response.status + ': ' + response.statusText);\n                err.response = response;\n                throw err;\n            }\n        }, error => {\n            let err = new Error(error.message);\n            throw err;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)))\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING,\n    payload: null\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const dishesFailed = (error) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: error\n});\n\n\n//PROMOS\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok)\n                return response;\n            else{\n                let err = new Error('Error '+response.status + ': ' + response.statusText);\n                err.response = response;\n                throw err;\n            }\n        }, error => {\n            let err = new Error(error.message);\n            throw err;\n        })\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromos(promotions)))\n        .catch(error => dispatch(promosFailed(error.message)))\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING,\n    payload: null\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const promosFailed = (error) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: error\n});\n\n\n//LEADERS\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok)\n                return response;\n            else{\n                let err = new Error('Error '+response.status + ': ' + response.statusText);\n                err.response = response;\n                throw err;\n            }\n        }, error => {\n            let err = new Error(error.message);\n            throw err;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)))\n}\n\nconst leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING,\n    payload: null\n});\n\nconst addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nconst leadersFailed = (error) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: error\n});\n","export const DISHES_LOADING = 'DISHES_LOADING';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED='COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const POST_FAVORITE = 'POST_FAVORITE';\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_FAVORITE = 'DELETE_FAVORITE'; ","import React , {Component} from 'react';\nimport {Text, View, ScrollView, FlatList, Modal, Button, StyleSheet, Alert, PanResponder, Share} from 'react-native';\nimport {Card, Icon, Rating, Input} from 'react-native-elements';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RouteProp } from '@react-navigation/native';\nimport {  } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\nimport { postFavorite, postComment } from '../redux/ActionCreators';\nimport * as Animatable from 'react-native-animatable';\n\nconst mapStateToProps = (state: any) => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        favorites: state.favorites\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    postFavorite: (dishId: any) => dispatch(postFavorite(dishId)),\n    postComment: (dishId, author, comment, rating) => dispatch(postComment(dishId, author, comment, rating))\n});\n\ntype RootStackParamList = {\n    Menu: undefined,\n    DishDetail: {dishId: number},\n  };\n\n  type ProfileScreenNavigationProp = StackNavigationProp<RootStackParamList,'DishDetail'>;\n\ntype ProfileScreenRouteProp = RouteProp<RootStackParamList, 'DishDetail'>;\n\ninterface Props {\n    navigation: ProfileScreenNavigationProp,\n    route: ProfileScreenRouteProp,\n}\n\ninterface State {\n    favorites: number[]\n}\n\nfunction RenderComments({comments}: any){\n\n    const renderCommentItem = (props: {item: any, index: number}) => {\n        return(\n            <View key={props.index} style={{margin: 10}}>\n                <Text style={{fontSize: 14}}>{props.item.comment}</Text>\n                <Rating readonly imageSize={20} startingValue={props.item.rating} />\n                <Text style = {{fontSize: 12}}>{'-- ' + props.item.author + ', ' + props.item.date}</Text>\n            </View>\n        );\n    }\n\n    return(\n        <Animatable.View animation=\"fadeInUp\" duration={2000} delay={1000}> \n            <Card title=\"Comments\">\n                <FlatList data={comments}\n                    renderItem = {renderCommentItem}\n                    keyExtractor = {(item)=>item.id.toString()} />\n            </Card> \n        </Animatable.View>\n    );\n}\n\nfunction RenderDish(props: any){\n\n    let view;\n\n    const handleViewRef = (ref: any) => view = ref;\n\n    const recognizeDrag = ({ moveX, moveY, dx, dy }) => {\n        if ( dx < -100)\n            return true;\n        else\n            return false;\n    }\n\n    //Task 3. Changed dx value for my device.\n    const recognizeComment = ({ moveX, moveY, dx, dy }) => {\n        if ( dx > -100  )\n            return true;\n        else\n            return false;\n    }\n\n    const panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: (e, gestureState) => {\n            return true;\n        },\n        onPanResponderGrant: () => {view.rubberBand(1000).then(endState => console.log(endState.finished ? 'finished' : 'cancelled'));},\n        onPanResponderEnd: (e, gestureState) => {\n            console.log(\"pan responder end\", gestureState);\n            if (recognizeDrag(gestureState))\n                Alert.alert(\n                    'Add Favorite',\n                    'Are you sure you wish to add ' + props.dish.name + ' to favorite?',\n                    [\n                    {text: 'Cancel', onPress: () => console.log('Cancel Pressed'), style: 'cancel'},\n                    {text: 'OK', onPress: () => {props.favorite ? console.log('Already favorite') : props.favPress('favorite')}},\n                    ],\n                    { cancelable: false }\n                );\n            if(recognizeComment(gestureState))\n                    props.toggleModal();\n\n            return true;\n        }\n    })\n\n    if(props.dish!=null){\n        return(\n            <Animatable.View animation=\"fadeInDown\" duration={2000} delay={1000}\n            ref={handleViewRef}\n            {...panResponder.panHandlers}>\n                <Card featuredTitle={props.dish.name}\n                    image={ {uri: baseUrl + props.dish.image }}>\n                    <Text style = {{margin: 10}}>\n                        {props.dish.description}\n                    </Text>\n                    <Icon raised reverse name={ props.favorite ? 'heart' : 'heart-o' } type='font-awesome' color=\"#f50\" \n                            onPress = {() => props.favorite ? alert('Already favorite') : props.favPress('favorite')}/>\n                    <Icon raised reverse name={'pencil'} type='font-awesome' color=\"#512DA8\" \n                        onPress = {()=>  props.commPress('dishfeedback')}/>\n                    <Icon\n                            raised\n                            reverse\n                            name='share'\n                            type='font-awesome'\n                            color='#51D2A8'\n                            onPress={() => shareDish(props.dish.name, props.dish.description, baseUrl + props.dish.image)} />\n                </Card>\n            </Animatable.View>\n            );\n    }else{\n        return(\n            <View></View>\n        );\n    }\n}\n\nconst shareDish = (title, message, url) => {\n    Share.share({\n        title: title,\n        message: title + ': ' + message + ' ' + url,\n        url: url\n    },{\n        dialogTitle: 'Share ' + title\n    })\n}\n\n\n\nclass DishDetail extends Component<any, any>{\n\n    constructor(props: any){\n        super(props);\n        this.state = {\n            showModal: false,\n            inputname: '',\n            comment: '',\n            rating: 0\n        }\n    }\n    \n\n    markFavorite = (dishId: number) => {\n       this.props.postFavorite(dishId);\n    }\n\n   toggleFeedbackModal = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        });\n    }\n\n    handleComment = (dishId) => {\n        console.log(JSON.stringify(this.state));\n        this.props.postComment(dishId, this.state.inputname, this.state.comment, this.state.rating);\n        this.toggleFeedbackModal();\n    }\n\n\n  render(){\n        const { dishId } = this.props.route.params;\n        const dish = this.props.dishes.dishes[dishId];\n        return(\n            <ScrollView keyboardShouldPersistTaps='handled'>\n                    <RenderDish dish={dish} favorite={this.props.favorites.some( (el: any) => el === dishId)}\n                    favPress = {(e: String)=>  { this.markFavorite(dishId)}} commPress = {e => this.toggleFeedbackModal()}\n                    toggleModal = {this.toggleFeedbackModal}/>\n                    <RenderComments comments={this.props.comments.comments.filter((comment: any) => comment.dishId === dishId)}/>\n                    <Modal\n                     animationType='slide'\n                     transparent={false}\n                     visible={this.state.showModal}\n                     onDismiss={() => {this.toggleFeedbackModal()}}\n                     onRequestClose={() => {this.toggleFeedbackModal()}}\n                    >\n                        <View style={styles.modal}>\n                            <Rating showRating fractions={1} startingValue={3.3}  \n                            onFinishRating = {(value)=> this.setState({rating: value})}/>\n                            <Input placeholder='  Author' style={{margin: 10}} leftIcon={{ type: 'font-awesome', name: 'user'}} \n                            onChangeText = {(value) => this.setState({inputname: value})}/>\n                            <Input placeholder='  Comment' leftIcon={{ type: 'font-awesome', name: 'comment' }} \n                            onChangeText = {(value)=> this.setState({comment: value})} />\n                        </View>\n                        <View style ={{margin: 20}}>\n                        <Button \n                            onPress = {() => { this.handleComment(dishId)}}\n                            color=\"#512DA8\"\n                            title=\"Submit\" \n                            />\n                        </View >\n                        <View style ={{margin: 20}}>\n                        <Button \n                            onPress = {() =>{this.toggleFeedbackModal()}}\n                            color=\"grey\"\n                            title=\"Close\" \n                            />\n                        </View>\n                </Modal>\n            </ScrollView>\n        );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n    modal: {\n        justifyContent: 'center',\n        margin: 20,\n    },\n    modalTitle: {\n        fontSize: 24,\n        fontWeight: \"bold\",\n        backgroundColor: '#512DA8',\n        textAlign: 'center',\n        color: 'white',\n        marginBottom: 20\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DishDetail);","import React, { Component } from 'react';\nimport { View, Text, ScrollView, Animated, Easing } from 'react-native';\nimport { Card } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst mapStateToProps = (state: any) => {\n    return {\n        dishes: state.dishes,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\n\nfunction RenderItem(props: {item: any, isLoading: any, errMess: any}){\n    const item = props.item;\n    if(item != null){\n        return(\n            <Card featuredTitle = {item.name}\n                featuredSubtitle = {item.designation}\n                image={{uri: baseUrl + item.image }}\n                >\n                <Text style={{margin: 10}}>\n                    {item.description}\n                </Text>\n            </Card>\n        );\n    }else{\n        return(\n            <View></View>\n        );\n    }\n}\n\nclass Home extends Component<any> {\n    animatedValue: Animated.Value;\n    constructor(props: any){\n        super(props);\n        this.animatedValue = new Animated.Value(0); \n    }\n\n    componentDidMount () {\n        this.animate()\n    }\n\n    animate () {\n        this.animatedValue.setValue(0)\n        Animated.timing(\n          this.animatedValue,\n          {\n            toValue: 8,\n            duration: 8000,\n            easing: Easing.linear\n          }\n        ).start(() => this.animate())\n    }\n\n    render() {\n        const xpos1 = this.animatedValue.interpolate({\n            inputRange: [0, 1, 3, 5, 8],\n            outputRange: [1200, 600, 0, -600, -1200]\n        })\n        const xpos2 = this.animatedValue.interpolate({\n            inputRange: [0, 2, 4, 6, 8],\n            outputRange: [1200, 600, 0, -600, -1200]\n        })\n        const xpos3 = this.animatedValue.interpolate({\n            inputRange: [0, 3, 5, 7, 8],\n            outputRange: [1200, 600, 0, -600, -1200 ]\n        })\n        return(\n            <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center'}}>\n                <Animated.View style={{ width: '100%', transform: [{translateX: xpos1}]}}>\n                    <RenderItem item={this.props.dishes.dishes.filter((dish: any) => dish.featured)[0]} \n                        isLoading={this.props.dishes.isLoading}\n                        errMess={this.props.dishes.erreMess} />\n                </Animated.View>\n                <Animated.View style={{ width: '100%',  transform: [{translateX: xpos2}]}}>\n                    <RenderItem item={this.props.promotions.promotions.filter((promo: any) => promo.featured)[0]} \n                        isLoading={this.props.promotions.isLoading}\n                        errMess={this.props.promotions.erreMess}/>\n                </Animated.View>\n                <Animated.View style={{ width: '100%',  transform: [{translateX: xpos3}]}}>\n                <RenderItem item={this.props.leaders.leaders.filter((leader: any) => leader.featured)[0]} \n                    isLoading={this.props.leaders.isLoading}\n                    errMess={this.props.leaders.erreMess} />\n                </Animated.View>\n            </View>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Home);","import React, {Component} from 'react';\nimport { View, FlatList, StyleSheet} from 'react-native';\nimport { Tile } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\nimport * as Animatable from 'react-native-animatable';\n\nconst mapStateToProps = (state: any) => {\n    return {\n        dishes: state.dishes\n    }\n}\n\n\nclass Menu extends Component <any>{\n\n        constructor(props: any){\n            super(props);\n        }\n\n render(){\n    const  navigation  = this.props.navigation;\n    const renderMenuItem = (props: {item: any, index: number}) => {\n        return (\n            <Animatable.View animation=\"fadeInRightBig\" duration={2000}>\n                <Tile\n                    key={props.index}\n                    title={props.item.name}\n                    caption={props.item.description}\n                    featured\n                    onPress={() => navigation.navigate('DishDetail', { dishId: props.item.id})}\n                    imageSrc={{ uri: baseUrl + props.item.image }}\n                  />\n            </Animatable.View>\n        );\n    };\n\n    return (\n         <View>\n            <FlatList \n                data={this.props.dishes.dishes}\n                    renderItem={renderMenuItem}\n                    keyExtractor={item => item.id.toString()}\n                />\n        </View>\n    );\n }\n\n}\n\n\nexport default connect(mapStateToProps)(Menu);","import React, { Component } from 'react';\nimport { View, Text, ScrollView, FlatList } from 'react-native';\nimport { Card, ListItem } from 'react-native-elements';\nimport {LEADERS} from '../shared/leaders';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\nimport * as Animatable from 'react-native-animatable';\n\nconst mapStatetoProps = (state: any) => {\n    return {\n        leaders: state.leaders\n    }\n}\n\n\nfunction History (){\n    return(\n        <View style={{flex: 1, marginTop: 50, alignItems: \"center\"}}>\n            <Card featuredTitle = \"Hitory\"\n            title=\"Our History\">\n                <Text style={{textAlign: \"justify\"}}>\n                    {'\\n'}\n                    Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon \n                    par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be \n                    found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring \n                    four of the best three-star Michelin chefs in the world, you never know what will arrive on \n                    your plate the next time you visit us.\n                    {'\\n\\n'}\n                    The restaurant traces its humble beginnings to The Frying Pan, a successful chain started \n                    by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.\n                    {'\\n\\n'}\n                </Text>\n            </Card>\n        </View>\n    );\n}\n\nfunction Leaders(props: {leaders: typeof LEADERS}){\n    if(props.leaders != null){\n        const renderAboutUs = (props: {item: any, index: number}) => {\n            return (\n                    <ListItem\n                        key={props.index}\n                        title={props.item.name}\n                        titleStyle={{ fontWeight: 'bold'}}\n                        subtitle={\n                            <View>\n                                <Text>{props.item.description}</Text>\n                            </View>}\n                        leftAvatar={{ source: {uri: baseUrl + props.item.image }}}\n                        bottomDivider\n                      />\n            );\n        };\n    \n        return(\n            <View style={{margin: 0}}>\n                <Card title=\"Corporate Leadership\"\n                    titleStyle= {{fontWeight: 'bold'}}>\n                    <FlatList \n                        data={props.leaders}\n                        renderItem={renderAboutUs}\n                        keyExtractor={item => item.id.toString()}\n                        />\n                </Card>\n            </View>\n        );\n    }else{\n        return(<View></View>);\n    }\n}\n\nclass AboutUs extends Component< any > {\n\n    constructor(props: any){\n        super(props);\n    }\n\n    render(){\n        return(\n            <ScrollView>\n                    <Animatable.View animation=\"fadeInDown\" duration={2000} delay={1000}>\n                        <History />\n                        <Leaders leaders={this.props.leaders.leaders}/>\n                    </Animatable.View>\n            </ScrollView>\n        );\n    }\n\n}\n\n\nexport default connect(mapStatetoProps)(AboutUs);","import React, { Component } from 'react';\nimport { View, Text, ScrollView } from 'react-native';\nimport { Card, Button, Icon } from 'react-native-elements';\nimport * as Animatable from 'react-native-animatable';\nimport * as MailComposer from 'expo-mail-composer';\n\n\n\nexport default class ContactUs extends Component {\n    sendMail() {\n        MailComposer.composeAsync({\n            recipients: ['confusion@food.net'],\n            subject: 'Enquiry',\n            body: 'To whom it may concern:'\n        })\n    }\n\n    render(){\n        return(\n        <View style={{flex: 1, marginTop: 50}}>\n            <Animatable.View animation=\"fadeInDown\" duration={2000} delay={1000}> \n                <Card featuredTitle = \"Contact Information\"\n                    title = \"Contact Information\"\n                    >\n                    <Text>\n                            {'\\n'}\n                            121, Clear Water Bay Road\n                            {'\\n\\n'}\n                            Clear Water Bay, Kowloon\n                            {'\\n\\n'}\n                            HONG KONG\n                            {'\\n\\n'}\n                            Tel: +852 1234 5678\n                            {'\\n\\n'}\n                            Fax: +852 8765 4321\n                            {'\\n\\n'}\n                            Email:confusion@food.net\n                            {'\\n'}\n                    </Text>\n                    <Button\n                        title=\"Send Email\"\n                        buttonStyle={{backgroundColor: \"#512DA8\"}}\n                        icon={<Icon name='envelope-o' type='font-awesome' color='white' />}\n                        onPress={this.sendMail}\n                        />\n                </Card>\n            </Animatable.View>\n        </View>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport { Text, View, ScrollView, Switch, Picker, StyleSheet, Button, Modal, Alert } from 'react-native';\nimport { Card } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\nimport * as Animatable from 'react-native-animatable';\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\n\nclass Reservation extends Component<any, any>{\n\n    constructor(props: any){\n        super(props);\n        this.state = {\n            guests: 1,\n            smoking: false,\n            date: '',\n            showModal: false\n        }\n    }\n\n    async obtainNotificationPermission() {\n        let permission = await Permissions.getAsync(Permissions.USER_FACING_NOTIFICATIONS);\n        if (permission.status !== 'granted') {\n            permission = await Permissions.askAsync(Permissions.USER_FACING_NOTIFICATIONS);\n            if (permission.status !== 'granted') {\n                Alert.alert('Permission not granted to show notifications');\n            }\n        }\n        return permission;\n    }\n\n    async presentLocalNotification(date: any) {\n        await this.obtainNotificationPermission();\n        Notifications.presentLocalNotificationAsync({\n            title: 'Your Reservation',\n            body: 'Reservation for '+ date + ' requested',\n            ios: {\n                sound: true\n            },\n            android: {\n                \n            }\n        });\n    }\n\n    handleReservation = (state: any) => {\n        //Task 2. Alert Box instead of modal\n        Alert.alert(\n            'Your reservation OK?',\n            'Number of Guests: '+state.guests+'\\nSmoking? '+state.smoking+'\\nDate and Time: '+state.date,\n            [\n                { \n                    text: 'Cancel', \n                    onPress: () => this.resetForm(),\n                    style: 'cancel'\n                },\n                {\n                    text: 'OK',\n                    onPress: () => this.presentLocalNotification(this.state.date)\n                }\n            ],\n            { cancelable: false }\n        );\n        //this.toggleModal();\n    }\n\n    resetForm = () => {\n        this.setState({\n            date: '',\n            guests: 1,\n            smoking: false,\n            showModal: false\n        });\n    }\n\n    toggleModal = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        });\n    }\n    //Task 3. Zoom in animatable added and removed the modal.\n    render() {\n        return(\n            <ScrollView>\n                <Animatable.View animation=\"zoomIn\" duration={2000} delay={500} >\n                <View style={styles.formRow}> \n                    <Text style={styles.formLabel}>Number of guests</Text>\n                    <Picker \n                        style={styles.formItem}\n                        selectedValue={this.state.guests}\n                        onValueChange={(value, index) => this.setState({guests: value})}\n                       >\n                        <Picker.Item label='1' value='1' />\n                        <Picker.Item label='2' value='2' />\n                        <Picker.Item label='3' value='3' />\n                        <Picker.Item label='4' value='4' />\n                        <Picker.Item label='5' value='5' />\n                        <Picker.Item label='6' value='6' />\n                    </Picker>\n                </View>\n                <View style = {styles.formRow}>\n                    <Text style = {styles.formLabel}>Somking or Not?</Text>\n                    <Switch\n                        style={styles.formItem}\n                        value={this.state.smoking}\n                        onTintColor= '#512DA8'\n                        onValueChange={(value)=>this.setState({smoking: value})}>\n                    </Switch>\n                </View>\n                <View style = {styles.formRow}>\n                    <Text style = {styles.formLabel}>Date and Time</Text>\n                    <DatePicker\n                        style={{flex: 2, marginRight: 20}}\n                        date={this.state.date}\n                        format=''\n                        mode=\"datetime\"\n                        placeholder=\"select date and Time\"\n                        minDate=\"2017-01-01\"\n                        confirmBtnText=\"Confirm\"\n                        cancelBtnText=\"Cancel\"\n                        onDateChange = {(date: any) => {this.setState({date: date})}}\n                        />\n                </View>\n                <View style = {styles.formRow}>\n                    <Button\n                        onPress ={()=> this.handleReservation(this.state)}\n                        title = 'Reserve'\n                        color = '#512DA8'\n                        accessibilityLabel = 'Learn more about this purple button'\n                        />\n                </View>\n                </Animatable.View>\n            </ScrollView>\n        );\n    }\n\n}\n\n\nconst styles = StyleSheet.create({\n    formRow: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 20\n    },\n    formLabel: {\n        fontSize: 18,\n        flex: 2\n    },\n    formItem: {\n        flex: 1\n    },\n    modal: {\n        justifyContent: 'center',\n        margin: 20,\n    },\n    modalTitle: {\n        fontSize: 24,\n        fontWeight: \"bold\",\n        backgroundColor: '#512DA8',\n        textAlign: 'center',\n        color: 'white',\n        marginBottom: 20\n    },\n    modalText: {\n        fontSize: 18,\n        margin: 10\n    }\n});\n\nexport default Reservation;","\nimport React, { Component } from 'react';\nimport { FlatList, View, Text, Alert } from 'react-native';\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\nimport Swipeout from 'react-native-swipeout';\nimport { deleteFavorite } from '../redux/ActionCreators';\nimport * as Animatable from 'react-native-animatable';\n\nconst mapDispatchToProps = dispatch => ({\n    deleteFavorite: (dishId) => dispatch(deleteFavorite(dishId))\n})\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes,\n      favorites: state.favorites\n    }\n  }\n\nclass Favorites extends Component<any> {\n\n    render() {\n\n        const  navigation  = this.props.navigation;\n        \n        const renderMenuItem = ({item, index}) => {\n\n            const rightButton = [\n                {\n                    text: 'Delete', \n                    type: 'delete',\n                    onPress: () => {\n                        Alert.alert(\n                            'Delete Favorite?',\n                            'Are you sure you wish to delete the favorite dish ' + item.name + '?',\n                            [\n                                { \n                                    text: 'Cancel', \n                                    onPress: () => console.log(item.name + 'Not Deleted'),\n                                    style: 'cancel'\n                                },\n                                {\n                                    text: 'OK',\n                                    onPress: () => this.props.deleteFavorite(item.id)\n                                }\n                            ],\n                            { cancelable: false }\n                        );\n                        \n                    }\n                }\n            ];\n    \n            return (\n                <Swipeout right={rightButton} autoClose={true}>\n                    <Animatable.View animation=\"fadeInRightBig\" duration={2000}> \n                        <ListItem\n                            key={index}\n                            title={item.name}\n                            subtitle={item.description}\n                            onPress={() => navigation.navigate('DishDetail', { dishId: item.id })}\n                            leftAvatar={{ source: {uri: baseUrl + item.image}}}\n                            />\n                    </Animatable.View>\n                 </Swipeout>\n            );\n        };\n\n        if (this.props.dishes.isLoading) {\n            return(\n                <View> \n                    <Text>\n                        Loading . . . \n                    </Text>\n                </View>\n            );\n        }\n        else if (this.props.dishes.errMess) {\n            return(\n                <View>            \n                    <Text>{this.props.dishes.errMess}</Text>\n                </View>            \n            );\n        }\n        else {\n            return (\n                <FlatList \n                    data={this.props.dishes.dishes.filter((dish: any) => this.props.favorites.some(el => el === dish.id))}\n                    renderItem={renderMenuItem}\n                    keyExtractor={item => item.id.toString()}\n                    />\n            );\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React, { Component } from 'react';\nimport { View, Button, StyleSheet } from 'react-native';\nimport { Card, Icon, Input, CheckBox } from 'react-native-elements';\nimport * as SecureStore from 'expo-secure-store';\n\n\nclass Login extends Component<any, any> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            remember: false\n        }\n    }\n\n    componentDidMount() {\n        SecureStore.getItemAsync('userinfo')\n            .then((userdata: any) => {\n                let userinfo = JSON.parse(userdata);\n                if (userinfo) {\n                    this.setState({username: userinfo.username});\n                    this.setState({password: userinfo.password});\n                    this.setState({remember: true})\n                }\n            })\n    }\n\n    handleLogin() {\n        console.log(JSON.stringify(this.state));\n        if (this.state.remember)\n            SecureStore.setItemAsync('userinfo', JSON.stringify({username: this.state.username, password: this.state.password}))\n                .catch((error: any) => console.log('Could not save user info', error));\n        else\n            SecureStore.deleteItemAsync('userinfo')\n                .catch((error: any) => console.log('Could not delete user info', error));\n\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Input\n                    placeholder=\"Username\"\n                    leftIcon={{ type: 'font-awesome', name: 'user-o' }}\n                    onChangeText={(username) => this.setState({username})}\n                    value={this.state.username}\n                    containerStyle={styles.formInput}\n                    />\n                <Input\n                    placeholder=\"Password\"\n                    leftIcon={{ type: 'font-awesome', name: 'key' }}\n                    onChangeText={(password) => this.setState({password})}\n                    value={this.state.password}\n                    containerStyle={styles.formInput}\n                    />\n                <CheckBox title=\"Remember Me\"\n                    center\n                    checked={this.state.remember}\n                    onPress={() => this.setState({remember: !this.state.remember})}\n                    containerStyle={styles.formCheckbox}\n                    />\n                <View style={styles.formButton}>\n                    <Button\n                        onPress={() => this.handleLogin()}\n                        title=\"Login\"\n                        color=\"#512DA8\"\n                        />\n                </View>\n            </View>\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        margin: 20,\n    },\n    formInput: {\n        margin: 40\n    },\n    formCheckbox: {\n        margin: 40,\n        backgroundColor: null\n    },\n    formButton: {\n        margin: 60\n    }\n});\n\nexport default Login;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Text, View, StyleSheet, Image, ScrollView, ToastAndroid } from 'react-native';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { Icon } from 'react-native-elements';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer';\nimport { fetchPromos, fetchLeaders, fetchComments, fetchDishes } from '../redux/ActionCreators';\nimport DishDetail from './DishdetailComponent';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport AboutUs from './AboutComponent';\nimport ContactUs from './ContactComponent';\nimport Reservation from './ReservationComponent';\nimport Favorites from './FavoriteComponent';\nimport Login from './LoginComponent';\n\nconst mapStateToProps = (state: any) => {\n    return {\n        \n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    fetchDishes: () => dispatch(fetchDishes()),\n    fetchLeaders:() => dispatch(fetchLeaders()),\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos())\n});\n  \ntype RootStackParamList = {\n    Menu: undefined,\n    Home: undefined,\n    AboutUs: undefined,\n    ContactUs: undefined\n    DishDetail: {dishId: number},\n    TableReservation: undefined,\n    FavoriteDish: undefined,\n    Login: undefined\n  };\n\nconst StackScreenOptions = {\n        headerStyle: {\n        backgroundColor: '#f4511e',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n        fontWeight: 'bold',\n        }\n    }\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst Drawer = createDrawerNavigator();\n\n//custom drawer used in drawer below\nconst CustomDrawerContentComponent = (props: any) => { return (\n    <ScrollView>\n        <SafeAreaView style={styles.container} forceInset={{top: 'always', horizontal: 'never'}}>\n            <View style = {styles.drawerHeader}>\n                <View style = {{flex: 1}}>\n                    <Image source={require('./images/logo.png')} style = {styles.drawerImage}/>\n                </View>\n                <View style = {{flex: 2}}>\n                    <Text style = {styles.drawerHeaderText}>My Restaurant</Text>\n                </View>\n            </View>\n            <DrawerItemList {...props}/>\n        </SafeAreaView>\n    </ScrollView> );\n}\n\n//stack navigator for menu component used in drawer\nfunction MenuStack(props: any){\n    return(\n        <Stack.Navigator initialRouteName=\"Menu\"\n            screenOptions={StackScreenOptions}\n          >\n            <Stack.Screen name=\"Menu\" component={Menu} \n                options={{title: 'Menu', headerLeft: () => {  return <Icon name=\"home\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n            <Stack.Screen name=\"DishDetail\" component={DishDetail} options={{ title: 'Dish Details' }} />\n        </Stack.Navigator>\n    );\n}\n\n//Stack navigator for Home Component\nfunction HomeStack(props: any){\n    return(\n        <Stack.Navigator screenOptions={StackScreenOptions} >\n            <Stack.Screen name=\"Home\" component={Home} \n                options={{ title: 'Home', headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n        </Stack.Navigator>\n    );\n}\n\n//Stack navigator for About Component\nfunction AboutUsStack(props: any){\n    return(\n        <Stack.Navigator screenOptions={StackScreenOptions} >\n            <Stack.Screen name=\"AboutUs\" component={AboutUs} \n                options={{ title: 'About Us', headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n        </Stack.Navigator>\n    );\n}\n\n//Stack Navigator for contact component\nfunction ContactUsStack(props: any){\n    return(\n        <Stack.Navigator screenOptions={StackScreenOptions} >\n            <Stack.Screen name=\"AboutUs\" component={ContactUs} \n                options={{ title: 'About Us', headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n        </Stack.Navigator>\n    );\n}\n\n\n//Reservation table\nfunction ReserveTable(props: any){\n        return(\n            <Stack.Navigator screenOptions={StackScreenOptions} >\n                <Stack.Screen name=\"TableReservation\" component={Reservation}\n                    options={{ title: 'Reserve a table' ,  headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n            </Stack.Navigator>\n        );\n}\n\n//Favorite Dish Companent\nfunction FavoriteDishStack(props: any){\n    return(\n        <Stack.Navigator screenOptions={StackScreenOptions} >\n            <Stack.Screen name=\"FavoriteDish\" component={Favorites}\n                options={{ title: 'Favorite Dishes' ,  headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n        </Stack.Navigator>\n    );\n}\n\n\n//Login Component\nfunction LoginStack(props: any){\n    return(\n        <Stack.Navigator screenOptions={StackScreenOptions} >\n            <Stack.Screen name=\"Login\" component={Login}\n                options={{ title: 'Login' ,  headerLeft: () => {  return <Icon name=\"menu\" size={24} color=\"white\" onPress = {()=> props.navigation.toggleDrawer()}/> } }} />\n        </Stack.Navigator>\n    );\n}\n\n\nclass Main extends React.Component<any> {\n\n    constructor(props: any){\n        super(props);\n    }\n    \n    componentDidMount(){\n        this.props.fetchDishes();\n        this.props.fetchLeaders();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n\n        /*NetInfo.fetch()\n        .then((connectionInfo) => {\n            ToastAndroid.show('Initial Network Connectivity Type: '\n                + connectionInfo.type + ', effectiveType: ' + connectionInfo.isConnected,\n                ToastAndroid.LONG)\n        });\n\n        NetInfo.addEventListener(this.handleConnectivityChange);*/\n    }\n\n   /* handleConnectivityChange = (connectionInfo: any) => {\n        switch (connectionInfo.type) {\n          case 'none':\n            ToastAndroid.show('You are now offline!', ToastAndroid.LONG);\n            break;\n          case 'wifi':\n            ToastAndroid.show('You are now connected to WiFi!', ToastAndroid.LONG);\n            break;\n          case 'cellular':\n            ToastAndroid.show('You are now connected to Cellular!', ToastAndroid.LONG);\n            break;\n          case 'unknown':\n            ToastAndroid.show('You now have unknown connection!', ToastAndroid.LONG);\n            break;\n          default:\n            break;\n        }\n      }*/\n\n    render(){\n        return(\n        <NavigationContainer>\n            <Drawer.Navigator initialRouteName='Home' drawerContent={props => <CustomDrawerContentComponent {...props} />} drawerStyle={{backgroundColor: '#D1C4E9', width: 240}}>\n                    <Drawer.Screen name=\"Login\" component={LoginStack} \n                        options= {{ title: 'Login', \n                                    drawerLabel: \"Login\", \n                                    drawerIcon: (tintColor) => (\n                                    <Icon name=\"sign-in\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />\n                    <Drawer.Screen name=\"Home\" component={HomeStack} \n                        options= {{ title: 'Home', \n                                    drawerLabel: \"Home\", \n                                    drawerIcon: (tintColor) => (\n                                    <Icon name=\"home\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />\n                    <Drawer.Screen name=\"AboutUs\" component={AboutUsStack} \n                        options= {{ title: 'About', \n                                    drawerLabel: \"About\", \n                                    drawerIcon: (tintColor) => (\n                                    <Icon name=\"info-circle\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />   \n                    <Drawer.Screen name=\"Menu\" component={MenuStack} \n                        options= {{ title: 'Menu', \n                                    drawerLabel: 'Menu',\n                                    drawerIcon: (tintColor) => (\n                                   <Icon name=\"list\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />  \n                    <Drawer.Screen name=\"FavoriteDishes\" component={FavoriteDishStack} \n                        options= {{ title: 'Favorite Dishes', \n                                    drawerLabel: 'Favorite Dishes',\n                                    drawerIcon: (tintColor) => (\n                                   <Icon name=\"heart\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />     \n                    <Drawer.Screen name=\"ContactUs\" component={ContactUsStack} \n                            options= {{ title: 'Contact', \n                                        drawerLabel: \"Contact Us\", \n                                        drawerIcon: (tintColor) => (\n                                        <Icon name=\"address-card\" type=\"font-awesome\" size={22}\n                                        color={tintColor.color} />\n                                    )}}\n                    />\n                    <Drawer.Screen name=\"ReservationTable\" component={ReserveTable} \n                        options= {{ title: 'Reserve Table', \n                                    drawerLabel: \"Reserve Table\", \n                                    drawerIcon: (tintColor) => (\n                                    <Icon name=\"info-circle\" type=\"font-awesome\" size={24}\n                                    color={tintColor.color} />\n                                )}}\n                    />\n            </Drawer.Navigator>\n         </NavigationContainer>\n        );\n               \n    }\n}\n\nconst styles = StyleSheet.create({\n\n    container: {flex: 1},\n    drawerHeader: {\n        backgroundColor: '#512DA8',\n        height: 140,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        flexDirection: 'row'\n      },\n      drawerHeaderText: {\n        color: 'white',\n        fontSize: 20,\n        margin: 10,\n        fontWeight: 'bold'\n      },\n      drawerImage: {\n        margin: 10,\n        width: 80,\n        height: 60\n      }\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import * as ActionTypes from './ActionTypes';\n\nexport const dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    } , action) => {\n            switch(action.type) {\n                case ActionTypes.ADD_DISHES:\n                    return {...state, isLoading: false, errMess: null, dishes: action.payload }\n                case ActionTypes.DISHES_FAILED:\n                    return {...state, isLoading: false, errMess: action.payload, dishes: []}\n                case ActionTypes.DISHES_LOADING:\n                    return {...state, isLoading: true, errMess: null, dishes: []}\n                default:\n                    return state\n            }\n    }","import * as ActionTypes from './ActionTypes';\n\nexport const comments = (state = {\n        errMess: null,\n        comments: []\n    } , action) => {\n            switch(action.type) {\n                case ActionTypes.ADD_COMMENTS:\n                    return {...state, errMess: null, comments: action.payload }\n                case ActionTypes.COMMENTS_FAILED:\n                    return {...state, errMess: action.payload, comments: []}\n                case ActionTypes.ADD_COMMENT:\n                    let comment = action.payload;\n                    comment.id = state.comments.length;\n                    comment.date = new Date().toISOString();\n                    console.log(JSON.stringify(comment));\n                    return {...state, errMess: null, comments: state.comments.concat(comment)}\n                default:\n                    return state\n            }\n    }","import * as ActionTypes from './ActionTypes';\n\nexport const leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n    } , action) => {\n            switch(action.type) {\n                case ActionTypes.ADD_LEADERS:\n                    return {...state, isLoading: false, errMess: null, leaders: action.payload }\n                case ActionTypes.LEADERS_FAILED:\n                    return {...state, isLoading: false, errMess: action.payload, leaders: []}\n                case ActionTypes.LEADERS_LOADING:\n                    return {...state, isLoading: true, errMess: null, laeders: []}\n                default:\n                    return state\n            }\n    }","import * as ActionTypes from './ActionTypes';\n\nexport const promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    } , action) => {\n            switch(action.type) {\n                case ActionTypes.ADD_PROMOS:\n                    return {...state, isLoading: false, errMess: null, promotions: action.payload }\n                case ActionTypes.PROMOS_FAILED:\n                    return {...state, isLoading: false, errMess: action.payload, promotions: []}\n                case ActionTypes.PROMOS_LOADING:\n                    return {...state, isLoading: true, errMess: null, promotions: []}\n                default:\n                    return state\n            }\n    }","import * as ActionType from './ActionTypes';\n\nexport const favorites = (state = [], action) => {\n    switch(action.type){\n        case ActionType.ADD_FAVORITE:\n            if(state.some(el => el===action.payload)){\n                return state;\n            }\n            else{\n                return (state.concat(action.payload));\n            }\n        case ActionType.DELETE_FAVORITE:\n                return state.filter((favorite) => favorite !== action.payload);\n        default:\n            return state;\n    }\n\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { dishes } from './dishes';\nimport { comments } from './comments';\nimport { leaders } from './leaders';\nimport { promotions } from './promotions';\nimport {favorites } from './favorites';\nimport { persistStore, persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/es/storage';\n\nconst config = {\n    key: 'root',\n    storage,\n    debug: true\n  }\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        persistCombineReducers(config, {\n            dishes,\n            comments,\n            leaders,\n            promotions,\n            favorites\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    const persistor = persistStore(store)\n    return { persistor, store };\n}","import React from 'react';\nimport { Text, View, StyleSheet, ActivityIndicator } from 'react-native';\nimport { loadPartialConfig } from '@babel/core';\n\n\nexport default function Loading() {\n    return(\n        <View>\n            <Text>\n                Loading . . .\n            </Text>\n        </View>\n    );\n}\n\nconst style = StyleSheet.create({\n    \n\n});","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Main from './App/component/MainComponent'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './App/redux/configureStore';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport Loading from './App/component/LoadingComponent';\n\nconst {persistor , store} = ConfigureStore();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n          <Main />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    backgroundColor: 'white',\n  }\n});","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}